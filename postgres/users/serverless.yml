service: postgres-users-microservice

package:
  excludeDevDependencies: false
  
custom:
  region: ${opt:region, self:provider.region}

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  stage: dev
  region: us-east-1
  environment:
    PGHOST: PLACEHOLDER_PGHOST
    PGUSER: PLACEHOLDER-USERNAME
    PGDATABASE: PLACEHOLDER-DBNAME
    PGPASSWORD: PLACEHOLDER-PWD
    PGPORT: 5432

functions:
  # -----------------------------
  # User functions
  # -----------------------------
  create-user:
    handler: functions/create-user.handler
    events:
      - http:
          path: /users/create
          method: POST
          integration: lambda-proxy
          private: false

  remove-user:
    handler: functions/remove-user.handler
    events:
      - http:
          path: /users/remove/{user_id}
          method: DELETE
          integration: lambda-proxy
          private: false
          request:
            parameters:
              paths:
                user_id: true

  find-user:
    handler: functions/find-user.handler
    events:
      - http:
          path: /users/find/{user_id}
          method: GET
          integration: lambda-proxy
          private: false
          request:
            parameters:
              paths:
                user_id: true
  
  credit:
    handler: functions/credit.handler
    events:
      - http:
          path: /users/credit/{user_id}
          method: GET
          integration: lambda-proxy
          private: false
          request:
            parameters:
              paths:
                user_id: true

  credit-subtract:
    handler: functions/credit-subtract.handler
    events:
      - http:
          path: /users/credit/subtract/{user_id}/{amount}
          method: POST
          integration: lambda-proxy
          private: false
          request:
            parameters:
              paths:
                user_id: true
                amount: true

  credit-add:
    handler: functions/credit-add.handler
    events:
      - http:
          path: /users/credit/add/{user_id}/{amount}
          method: POST
          integration: lambda-proxy
          private: false
          request:
            parameters:
              paths:
                user_id: true
                amount: true


resources:
  Resources:
    StockDB:
      Type: AWS::RDS::DBInstance
      Properties: 
        Engine: Postgres
        EngineVersion: 10.6
        DBInstanceIdentifier: "PLACEHOLDER-DBID"    # case insensitive
        DBName: "PLACEHOLDER-DBNAME"                # case sensitive
        MasterUsername: "PLACEHOLDER-USERNAME"
        MasterUserPassword: "PLACEHOLDER-PWD"
        DBInstanceClass: "PLACEHOLDER-DBINSTANCE-CLASS"
        AllocatedStorage: 20
        Port: 5432
        PubliclyAccessible: true