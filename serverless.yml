service: lambda-saga

custom:
  region: ${opt:region, self:provider.region}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
      Resource: 
        - arn:aws:dynamodb:${self:custom.region}:*:table/Users
        - arn:aws:dynamodb:${self:custom.region}:*:table/Orders
        - arn:aws:dynamodb:${self:custom.region}:*:table/Stock
        - arn:aws:dynamodb:${self:custom.region}:*:table/Payments

functions:
  # -----------------------------
  # User functions
  # -----------------------------
  create-user:
    handler: users/create-user.handler
    events:
      - http:
          path: /users/create
          method: POST
          integration: lambda
          private: false

  remove-user:
    handler: users/remove-user.handler
    events:
      - http:
          path: /users/remove/{user_id}
          method: DELETE
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true

  find-user:
    handler: users/find-user.handler
    events:
      - http:
          path: /users/find/{user_id}
          method: GET
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true
  
  credit:
    handler: users/credit.handler
    events:
      - http:
          path: /users/credit/{user_id}
          method: GET
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true

  credit-subtract:
    handler: users/credit-subtract.handler
    events:
      - http:
          path: /users/credit/subtract/{user_id}/{amount}
          method: POST
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true
                amount: true

  credit-add:
    handler: users/credit-add.handler
    events:
      - http:
          path: /users/credit/add/{user_id}/{amount}
          method: POST
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true
                amount: true

  # -----------------------------
  # Payment functions
  # -----------------------------
  cancel-payment:
    handler: functions/cancel-payment.handler
    events:
      - http:
          path: /payment/cancelPayment/{user_id}/{order_id}
          method: POST
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true
                order_id: true

  pay:
    handler: functions/pay.handler
    events:
      - http:
          path: /payment/pay/{user_id}/{order_id}
          method: POST
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                user_id: true
                order_id: true

  payment-status:
    handler: functions/payment-status.handler
    events:
      - http:
          path: /payment/status/{order_id}
          method: GET
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                order_id: true

  remove-payment:
    handler: functions/remove-payment.handler
    events:
      - http:
          path: /payment/remove/{order_id}
          method: DELETE
          integration: lambda
          private: false
          request:
            parameters:
              paths:
                order_id: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: User_ID
            AttributeType: S
        KeySchema:
          - AttributeName: User_ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    orderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Orders
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    stockTable:
       Type: AWS::DynamoDB::Table
       Properties:
         TableName: Stock
         AttributeDefinitions:
           - AttributeName: Item_ID
             AttributeType: S
         KeySchema:
           - AttributeName: Item_ID
             KeyType: HASH
         ProvisionedThroughput:
           ReadCapacityUnits: 1
           WriteCapacityUnits: 1

    paymentTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: Payments
          AttributeDefinitions:
            - AttributeName: Order_ID
              AttributeType: S
          KeySchema:
            - AttributeName: Order_ID
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
